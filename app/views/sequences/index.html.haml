#sequences
  .alert.alert-info
    %p Thanks for your contribution to brute forcing the last puzzle in Fez. To contribute, stand in the middle of the '1' square in the monolith room and input the following sequences then report back with your results.

    %p Note that the sequences can be entered quickly by entering the first one completely, then only the last input of each following sequence.

  .alert.alert-success
    We have a reported match!
    = link_to "Click here to view", matching_sequences_path

  %table.table.table-striped
    %tbody
      - previous_input = nil
      - @sequences.each do |s|
        - s_breaks_sequence = previous_input.nil? ? false : !s.inputs.start_with?(previous_input.inputs.gsub(/^\S+\s/, ''))
        - previous_input = s
        - if s_breaks_sequence
          %tr
            %td{ :colspan => 2 }
              .alert.alert-danger The sequence breaks here, start enterring inputs from the start of the next sequence.
        %tr
          %td.inputs= s.inputs
          %td
            = form_tag update_sequences_path, :method => :post do
              = hidden_field_tag :sequence_id, s.id
              = submit_tag "We have a match", :name => "match", :class => "btn btn-success"

  .well.controls
    = form_tag update_sequences_path, :method => :post do
      = hidden_field_tag :sequence_ids, @sequences.map(&:id).join(',')
      = submit_tag "No red cube", :name => "wrong", :class => "btn btn-danger btn-large"
      %br/
      = submit_tag "Didn't test", :name => "no_test", :class => "btn"

